function Autostart()
{	
	Orion.Exec("AutoHealSelf",true)
}

// Autoheal
function AutoHealSelf()
{ 
	while(true)
	{
		if(!Player.Dead())
		{
			while(Player.Hits()<(Player.MaxHits()-20) || Player.Poisoned())
			{		
				if(Orion.Count(0x0E21) > 0)
				{
					Orion.BandageSelf();					
					Orion.Wait(500);
					Orion.WaitJournal("Вылечено|Вы положили", Orion.Now(), Orion.Now()+10000);
				}
				else
					Orion.Print('33', ' No more bandage left ! ');
				Orion.Wait(500);
			}					
			Orion.Wait(500);							
		}
		Orion.Wait(500);
	}
}

// Attack NewTargetSystem target
function AttackNextMob(){    
	var Target =  Orion.TargetSystemSerial();
	Orion.WarMode(true);
	Orion.CharPrint(self, 1153, ">>"+Orion.FindObject(Target).Name());
	Orion.WaitTargetObject(Target);
	Orion.Say('all kill');
	Orion.Wait(200);
    Orion.Attack(Target);    
}

// Summon bear + overhead timer
function summon_bear()
{
	Orion.Say(".newbear")
	if(!Orion.DisplayTimerExists(1))
		Orion.AddDisplayTimer(1, 620*1000, 'custom', 'LineBar', 'Bear', 700, 350);
}

function rapid_shooting()
{
	Orion.Say(".rapidshoot")
	if(!Orion.DisplayTimerExists(2))
		Orion.AddDisplayTimer(2, 340*1000, 'custom', 'LineBar', 'Shooting', 700, 395);

}

// Loot from container
function loot_from_container(container_serial)
{
	_loot = [
		// General
		0x0EED,  // Gold
		0x0F3F,  // Arrows
		0x1BFB,  // Bolts
		// Gems
		0x0F11,  // Sapphire
		0x0F25,  // Piece of Amber
		0x0F10,  // Emerald
		0x0F18,  // Tourmaline
		0x0F13,  // Rubie
		0x0F0F,  // Star Sapphire
		0x0F26,  // Diamond
		0x0F15,  // Citrine
		0x0F16,  // Amethyst
		// Misc
		0x0E34,  // Eledars Contract
		0x2258,  // Recipe
	];
	// ###################
	Orion.UseObject(container_serial);
	Orion.Wait(300);
	_loot.forEach(function(_item){
		var _found_items = Orion.FindType(_item, 0xFFFF, container_serial);
		if(_found_items.length)
		{
			_found_items.forEach(function(_loot_item){
				Orion.MoveItem(_loot_item, 0, backpack);
				Orion.Wait(600);				
			});
		}
	});

}


function test()
{		
	Orion.AddDisplayTimer(1, 4000, 'custom', 'LineBar', 'Ability1', 700, 350);
	Orion.AddDisplayTimer(2, 6000, 'custom', 'LineBar', 'Ability2', 700, 395);
	Orion.AddDisplayTimer(3, 7000, 'custom', 'LineBar', 'Ability3', 700, 440);
	Orion.AddDisplayTimer(4, 3000, 'custom', 'LineBar', 'Ability4', 700, 495);
}

function changing_timer(id, command, duration, threshold, timer_name, x, y)
{
	Orion.Say(command)
	Orion.AddDisplayTimer(id, duration * 1000, 'custom', 'LineBar', timer_name, x, y);
	Orion.Wait(threshold * 1000);
	Orion.RemoveDisplayTimer(id);
	Orion.AddDisplayTimer(id, (duration - threshold) * 1000, 'custom', 'LineBar', timer_name, x, y, 0x0026, 0xFF);
}

function loot()
{	
	_bags = [
		0x0E75, // Backpack
	];
	_bladed = [
		0x1401, // Kryss
		0x1234, // РЕЗАЛО БОГОВ
	];
	var _counter = 0;
	var _to_cut = 0;
	var _corpses = Orion.FindType(0x2006, 0xFFFF, ground);	
	if(_corpses.length)
	{		
		var _dagger = Orion.FindType(0x0F51, 0xFFFF, backpack);
		if(Orion.ObjAtLayer(1))		
			_weapon = Orion.ObjAtLayer(1)		
		else
			_weapon = Orion.ObjAtLayer(2)
			
		_bladed.forEach(function(_type){
			if(_type == _weapon.Graphic())
			{
				Orion.Print("Bladed item equipped");
				_dagger = _weapon.Serial();
			}
		});		
		_corpses.forEach(function(_corpse){			
			_counter++;
			Orion.Print("Corpse "+_counter+"/"+_corpses.length);
			if(_dagger.length && _to_cut == 1)
			{				
				Orion.UseObject(_dagger);
				Orion.Wait(200);
				Orion.TargetObject(_corpse);
				Orion.Wait(650);								

			}
			loot_from_container(_corpse);
			Orion.Wait(300);
			_bags.forEach(function(_bag){
				var _bags_in_corpse = Orion.FindType(_bag, 0xFFFF, _corpse)
				if(_bags_in_corpse.length)
				{
					_bags_in_corpse.forEach(function(_bag_in_corpse){						
						loot_from_container(_bag_in_corpse);
						Orion.Wait(300);
					});
				}
			});
		if(_weapon)
			Orion.Equip(_weapon.Serial());
		});
	}
}

