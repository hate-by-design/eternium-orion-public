function Autostart()
{	
	Orion.Exec("AutoHealSelf",true)
}

// Autoheal
function AutoHealSelf()
{ 
	while(true)
	{
		if(!Player.Dead())
		{
			while(Player.Hits()<(Player.MaxHits()-10))
			{		
				if(Orion.Count(0x0E21) > 0)
				{
					Orion.BandageSelf();					
					Orion.Wait(500);
					Orion.WaitJournal("Вылечено|interrupted|Не удалось|Вы положили", Orion.Now(), Orion.Now()+10000);
					Orion.Wait(1000);
				}
				else
					Orion.Print('33', ' No more bandage left ! ');
				Orion.Wait(500);
			}					
			Orion.Wait(500);							
		}
		Orion.Wait(500);
	}
}

// Attack NewTargetSystem target
function AttackNextMob()
{    
	var _target =  Orion.TargetSystemSerial();
	var _name = Orion.FindObject(_target).Name()
	if(_target && _name && _name != "Bear spirit")
	{
		Orion.WarMode(true);
		Orion.CharPrint(self, 1153, ">>"+_name);
		Orion.Wait(200);
	    Orion.Attack(_target);    
	}

}

// Summon bear + overhead timer
function summon_bear()
{
	Orion.Say(".newbear")
	if(!Orion.DisplayTimerExists(1))
		Orion.AddDisplayTimer(1, 650*1000, 'custom', 'LineBar', 'Bear', 700, 350);
}

function inferno_chain()
{
	Orion.Say(".infchain")
	if(!Orion.DisplayTimerExists(1))
		Orion.AddDisplayTimer(1, 80*1000, 'custom', 'LineBar', 'Chains', 700, 350);
}

function rapid_shooting()
{
	Orion.Say(".rapidshoot")
	if(!Orion.DisplayTimerExists(2))
		Orion.AddDisplayTimer(2, 340*1000, 'custom', 'LineBar', 'Shooting', 700, 395);

}

// Loot from container
function loot_from_container(container_serial)
{
	_loot = [
		// General
		0x0EED,  // Gold
		0x0F3F,  // Arrows
		0x1BFB,  // Bolts
		// Gems
		0x0F11,  // Sapphire
		0x0F25,  // Piece of Amber
		0x0F10,  // Emerald
		0x0F18,  // Tourmaline
		0x0F13,  // Rubie
		0x0F0F,  // Star Sapphire
		0x0F26,  // Diamond
		0x0F15,  // Citrine
		0x0F16,  // Amethyst
		// Misc
		0x0E34,  // Eledars Contract
		//0x2258,  // Recipe
		0x14EB,  // Map
		0x14ED,  // Ashas book
		// Cutting
		0x1BD1,  // Feather
	];
	// ###################
	Orion.UseObject(container_serial);
	Orion.Wait(300);
	_loot.forEach(function(_item){
		var _found_items = Orion.FindType(_item, 0xFFFF, container_serial);
		if(_found_items.length)
		{
			_found_items.forEach(function(_loot_item){
				Orion.MoveItem(_loot_item, 0, backpack);
				Orion.Wait(600);				
			});
		}
	});

}


function test()
{		
	Orion.AddDisplayTimer(1, 4000, 'custom', 'LineBar', 'Ability1', 700, 350);
	Orion.AddDisplayTimer(2, 6000, 'custom', 'LineBar', 'Ability2', 700, 395);
	Orion.AddDisplayTimer(3, 7000, 'custom', 'LineBar', 'Ability3', 700, 440);
	Orion.AddDisplayTimer(4, 3000, 'custom', 'LineBar', 'Ability4', 700, 495);
}

function mega_timer_9000()
{
	changing_timer(1, "", 20, 10, "Test_Timer", 700, 350);
}

function changing_timer(id, command, duration, threshold, timer_name, x, y)
{
	Orion.Say(command)
	Orion.AddDisplayTimer(id, duration * 1000, 'custom', 'LineBar', timer_name, x, y);
	Orion.Wait(threshold * 1000);
	Orion.RemoveDisplayTimer(id);
	Orion.AddDisplayTimer(id, (duration - threshold) * 1000, 'custom', 'LineBar', timer_name, x, y, 0x0026, 0xFF);
}

function loot()
{	
	_bags = [
		0x0E75, // Backpack
	];
	_bladed = [
		0x1401, // Kryss
		0x0F51, // Dagger
	];
	var _counter = 0;
	var _to_cut = 0;
	var _corpses = Orion.FindType(0x2006, 0xFFFF, ground);	
	if(_corpses.length)
	{		
		var _dagger = Orion.FindType(0x0F51, 0xFFFF, backpack);
		if(Orion.ObjAtLayer(1))		
			_weapon = Orion.ObjAtLayer(1)		
		else
			_weapon = Orion.ObjAtLayer(2)
			
		_bladed.forEach(function(_type){
			if(_type == _weapon.Graphic())
			{
				Orion.Print("Bladed item equipped");
				_dagger = _weapon.Serial();
			}
		});		
		_corpses.forEach(function(_corpse){			
			_counter++;
			Orion.Print("Corpse "+_counter+"/"+_corpses.length);
			if(_dagger.length && _to_cut == 1)
			{				
				Orion.UseObject(_dagger);
				Orion.Wait(200);
				Orion.TargetObject(_corpse);
				Orion.Wait(650);								

			}
			loot_from_container(_corpse);
			Orion.Wait(300);
			_bags.forEach(function(_bag){
				var _bags_in_corpse = Orion.FindType(_bag, 0xFFFF, _corpse)
				if(_bags_in_corpse.length)
				{
					_bags_in_corpse.forEach(function(_bag_in_corpse){						
						loot_from_container(_bag_in_corpse);
						Orion.Wait(300);
					});
				}
			});
		});
		if(_weapon)
			Orion.Equip(_weapon.Serial());
	}
}

function craft()
{
	while(!Player.Dead())
	{
		Orion.Say(".makelastitem");
		Orion.Wait(4000);
	}
}


function exp_counter()
{
	// Вы получили {int} единиц опыта
	var _started = new Date().getTime();
	var _total_exp = 0;
	while(true)
	{
		if(Orion.InJournal("MakeReset"))
		{
			_started = new Date().getTime();
			_total_exp = 0;
			Orion.ClearJournal("MakeReset");
			Orion.Print("Опыт сброшен");
		}
		var _message = Orion.WaitJournal("Вы получили", Orion.Now(), Orion.Now()+10000);
		if(_message)
		{
			var _message_text = _message.Text();
			var _exp_match = /Вы получили (\d+)/.exec(_message_text);
			if(_exp_match && _exp_match.length)
				_total_exp+= parseInt(_exp_match[1]);

			var _minutes = ((new Date().getTime() - _started) / 1000) / 60;			
			var _exp_per_minute = (_total_exp/_minutes).toFixed(2);
			Orion.Print("Минут -> "+_minutes.toFixed(0));
         	Orion.Print("0x0035", "Опыта в минуту: +"+_exp_per_minute+", всего: +"+_total_exp);
		}		

		Orion.Wait(200);
	}
}

function sparring()
{
	// Не трогать
	_start_x = Player.X();
	_start_y = Player.Y();	
	// Трогать
	_target = 0x0002E8BF;
	_hp_to_flee = 80;
	_flee_x = _start_x - 4;

	while(!Player.Dead())
	{
		Orion.Attack(_target);
		if(Player.Hits() <= _hp_to_flee)
		{			
			Orion.WalkTo(_flee_x, _start_y, Player.Z(), 0);
			while(Player.Hits() < Player.MaxHits() - 22)
			{								
				Orion.Wait(1000);				
			}
		}				
		else
		{			
			Orion.WalkTo(_start_x, _start_y, Player.Z(), 0);
			while(Player.Hits() >= _hp_to_flee)
			{
				Orion.Wait(200);
			}
		}
		Orion.Wait(500);
	}
}

function unload_maps()
{	
	var _maps = Orion.FindType(0x14EB);
	Orion.Print(_maps);
	if(_maps.length)
	{		
		_maps.forEach(function(_item){
			Orion.Print(_item);
			var _map = Orion.FindObject(_item);			
			Orion.Print(_map);
			Orion.Print(_map.Properties());
		});
	}
}